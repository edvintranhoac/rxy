ryx <- function(data, y, x){
if(missing(x)){
x <- names(data)[sapply(data, class)=="numeric"]
x <- setdiff(x, y)
}
df <- data.frame()
for (var in x){
res <- cor.test(data[[y]], data[[var]])
df_temp <- data.frame(variable = var,
r = res$estimate,
p = res$p.value)
df <- rbind(df, df_temp)
df <- df[order(-abs(df$r)),]
}
df$sigif <- ifelse(df$p < .001, "***",
ifelse(df$p < .01, "**",
ifelse(df$p < .05, "*", " ")))
results <- list(y=y, x=x, df=df)
class(results) <- "ryx"
return(results)
}
library(MASS)
x <- ryx(Boston, y="medv")
x
print(x$df)
print(x$df, row.names = FALSE)
cat(paste0("Correlations of ", df$y, " with\n"))
df$y
cat(paste0("Correlations of ", x$y, " with\n"))
print(x$df, row.names = FALSE)
cat(paste0("Correlations of ", x$y, " with\n"))
print(x$df, row.names = FALSE)
print <- function(x) {
cat(paste0("Correlations of ", x$y, " with\n"))
print(x$df, row.names = FALSE)
}
print(x)
x <- ryx(Boston, y="medv")
print <- function(x) {
cat(paste0("Correlations of ", x$y, " with\n"))
print(x$df, row.names = FALSE)
}
print(x)
x$df
print <- function(x) {
cat(paste0("Correlations of ", x$y, " with\n"))
print(x$df)
}
print(x)
x <- ryx(Boston, y="medv")
x$df
cat(paste0("Correlations of ", x$y, " with\n"))
print(x$df, row.names = FALSE)
x$df
print <- function(x) {
cat(paste0("Correlations of ", x$y, " with\n"))
print(x$df, row.names = FALSE)
}
print(x)
print <- function(results) {
cat(paste0("Correlations of ", results$y, " with\n"))
print(results$df, row.names = FALSE)
}
print(x)
x <- ryx(Boston, y="medv")
print <- function(results) {
cat(paste0("Correlations of ", results$y, " with\n"))
print(results$df, row.names = FALSE)
}
print(x)
print(x$df, row.names = FALSE)
print(x$df)
print(x$df)
base::print(x$df, row.names = FALSE)
x <- ryx(Boston, y="medv")
print <- function(x) {
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(x$df, row.names = FALSE)
}
print(x)
print <- function(x) {
df <- x$df
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
print(x)
print <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
print(x)
print <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
df$p <- signif(df$p, 4)
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
print(x)
print <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
df$p <- signif(df$p, 3)
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
print(x)
print <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
df$p <- signif(df$p, 2)
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
print(x)
print <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
df$p <- signif(df$p, 3)
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
print(x)
2e-16
print <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
df$p <- ifelse(df$p < 2e-16, signif(df$p, 3), 2e-16)
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
print(x)
print <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
df$p <- ifelse(df$p > 2e-16, signif(df$p, 3), 2e-16)
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
print(x)
print <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
df$p <- ifelse(df$p > 2e-16, signif(df$p, 3), < 2e-16)
print(x)
print <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
df$p <- ifelse(df$p > 2e-16, signif(df$p, 3), 2e-16)
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
print(x)
print <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
df$p <- signif(df$p, 3)
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
print(x)
x <- ryx(Boston, y="medv")
print <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
df$p <- signif(df$p, 3)
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
print(x)
ryx <- function(data, y, x){
if(missing(x)){
x <- names(data)[sapply(data, class)=="numeric"]
x <- setdiff(x, y)
}
df <- data.frame()
for (var in x){
res <- cor.test(data[[y]], data[[var]])
df_temp <- data.frame(variable = var,
r = res$estimate,
p = res$p.value)
df <- rbind(df, df_temp)
df <- df[order(-abs(df$r)),]
}
df$sigif <- ifelse(df$p < .001, "***",
ifelse(df$p < .01, "**",
ifelse(df$p < .05, "*", " ")))
results <- list(y=y, x=x, df=df)
class(results) <- "ryx"
return(results)
}
library(MASS)
x <- ryx(Boston, y="medv")
print <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
df$p <- signif(df$p, 3)
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
print(x)
summary <- function(x) {
cat(paste0("Correlating ", x$y, " with ", x$x))
}
summary(x)
cat(paste0("Correlating ", x$y, " with ", x$x))
cat(paste0("Correlating ", x$y, " with ", x$x))
x$x
x$y
paste0("Correlating ", x$y, " with ", x$x)
x$x
cat(paste0("Correlating ", x$y, " with ", x$x))
paste0("Correlating ", x$y, " with ", x$x)
paste("Correlating ", x$y, " with ", x$x)
cat(paste0("Correlating ", x$y, " with "), paste0(x$x))
cat(paste0("Correlating ", x$y, " with"), paste0(x$x))
x$df$r
median(x$df$r)
mincorr <- min(x$df$r)
maxcorr <- max(x$df$r)
summary <- function(x) {
medcorr <- round(median(x$df$r), 3)
mincorr <- round(min(x$df$r), 3)
maxcorr <- round(max(x$df$r), 3)
cat(paste0("Correlating ", x$y, " with"), paste0(x$x),
"\nThe median absolute correlation")
}
summary(x)
cat(paste0("Correlating ", x$y, " with"), paste0(x$x),
"\nThe median absolute correlation was ", medcorr, " with a range from ",
mincorr, " to ", maxcorr)
summary <- function(x) {
medcorr <- round(median(x$df$r), 3)
mincorr <- round(min(x$df$r), 3)
maxcorr <- round(max(x$df$r), 3)
cat(paste0("Correlating ", x$y, " with"), paste0(x$x),
"\nThe median absolute correlation was ", medcorr, " with a range from ",
mincorr, " to ", maxcorr)
}
summary(x)
summary <- function(x) {
medcorr <- round(median(x$df$r), 3)
mincorr <- round(min(x$df$r), 3)
maxcorr <- round(max(x$df$r), 3)
cat("Correlating ", x$y, " with", paste0(x$x),
"\nThe median absolute correlation was ", medcorr, " with a range from ",
mincorr, "to", maxcorr)
}
summary(x)
summary <- function(x) {
medcorr <- round(median(x$df$r), 3)
mincorr <- round(min(x$df$r), 3)
maxcorr <- round(max(x$df$r), 3)
cat("Correlating", x$y, "with", paste0(x$x),
"\nThe median absolute correlation was ", medcorr, " with a range from ",
mincorr, "to", maxcorr)
}
summary(x)
summary <- function(x) {
medcorr <- round(median(x$df$r), 3)
mincorr <- round(min(x$df$r), 3)
maxcorr <- round(max(x$df$r), 3)
cat("Correlating", x$y, "with", paste0(x$x),
"\nThe median absolute correlation was", medcorr, "with a range from",
mincorr, "to", maxcorr)
}
summary(x)
x$p
x$p
x$df$p
x$df$sigif
mtcars
x <- ryx(mtcars, y="mpg")
x$df$sigif
mtcars
x <- ryx(mtcars, y="disp")
x$df$sigif
print(x)
library(MASS)
x <- ryx(Boston, y="medv")
print <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
df$p <- signif(df$p, 3)
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
print(x)
x$df$sigif
count(x$df$sigif == "***")
sum(x$df$sigif == "***")
sum(x$df$sigif == "**")
length(x$df)
length(x$df$variable)
summary <- function(x) {
medcorr <- round(median(x$df$r), 3)
mincorr <- round(min(x$df$r), 3)
maxcorr <- round(max(x$df$r), 3)
count_insig <- sum(x$df$sigif == " ")
n_x <- length(x$df$variable)
cat("Correlating", x$y, "with", paste0(x$x),
"\nThe median absolute correlation was", medcorr, "with a range from",
mincorr, "to", maxcorr, "\n", n_x - count_insig, "out of", n_x,
"variables where significant at the p < 0.05 level.")
}
x$df$sigif
summary(x)
summary <- function(x) {
medcorr <- round(median(x$df$r), 3)
mincorr <- round(min(x$df$r), 3)
maxcorr <- round(max(x$df$r), 3)
count_insig <- sum(x$df$sigif == " ")
n_x <- length(x$df$variable)
cat("Correlating", x$y, "with", paste0(x$x),
"\nThe median absolute correlation was", medcorr, "with a range from",
mincorr, "to", maxcorr, "\n", n_x - count_insig, "out of", n_x,
"variables were significant at the p < 0.05 level.")
}
summary(x)
require(ggplot2)
df <- x$df
df$sign <- ifelse(df$r >= 0, "positive", "negative")
View(df)
ggplot(df, aes(x = r, y = variable, color = positive)) +
geom_col()
ggplot(df, aes(x = r, y = variable, color = sign)) +
geom_col()
ggplot(df, aes(x = r, y = variable, color = sign)) +
geom_point() +
geom_segment()
ggplot(df, aes(x = r, y = variable, color = sign)) +
geom_point() +
geom_segment(aes(xend = r))
ggplot(df, aes(x = r, y = variable, color = sign)) +
geom_point() +
geom_segment(aes(xend = r, yend = variable))
ggplot(df, aes(x = abs(r), y = variable, color = sign)) +
geom_point() +
geom_segment(aes(xend = r, yend = variable))
ggplot(df, aes(x = abs(r), y = variable, color = sign)) +
geom_point() +
geom_segment(aes(xend = abs(r), yend = variable))
df <- x$df
df$sign <- ifelse(df$r >= 0, "positive", "negative")
df$absr <- abs(df$r)
ggplot(df, aes(x = absr, y = variable, color = sign)) +
geom_point() +
geom_segment(aes(xend = absr, yend = variable))
ggplot(df, aes(x = absr, y = variable, color = sign)) +
geom_point() +
geom_segment(aes(xend = absr, yend = variable)) +
theme_bw()
ggplot(df, aes(x = absr, y = variable, color = sign)) +
geom_point() +
geom_segment(aes(xend = absr, yend = variable), color = "black") +
theme_bw()
ggplot(df, aes(x = absr, y = variable, color = sign)) +
geom_point() +
geom_segment(aes(xend = absr, yend = variable), color = "black") +
theme_bw()
ggplot(df, aes(x = absr, y = variable, color = sign)) +
#geom_point() +
geom_segment(aes(xend = absr, yend = variable), color = "black") +
theme_bw()
ggplot(df, aes(x = absr, y = variable, color = sign)) +
geom_point() +
geom_segment(aes(xend = absr, yend = variable), color = "black") +
theme_bw()
ggplot(df, aes(x = absr, y = variable, color = sign)) +
geom_point() +
geom_segment(aes(xend = absr, y = 0, yend = variable), color = "black") +
theme_bw()
ggplot(df, aes(x = absr, y = variable, color = sign)) +
geom_point() +
geom_segment(aes(x = 0, xend = absr, yend = variable), color = "black") +
theme_bw()
ggplot(df, aes(x = absr, y = variable, color = sign)) +
geom_point() +
geom_segment(aes(x = 0, xend = absr, yend = variable)) +
theme_bw()
ggplot(df, aes(x = absr, y = variable)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable)) +
theme_bw()
ggplot(df, aes(x = absr, y = fct_reorder(variable, absr))) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable)) +
theme_bw()
df$variable <- factor(df$variable, levels = df$variable[order(df$absr)])
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable)) +
theme_bw()
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_segment(aes(x = 0, xend = absr, yend = variable)) +
geom_point(aes(color = sign)) +
theme_bw()
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_segment(aes(x = 0, xend = absr, yend = variable)) +
geom_point(aes(color = sign)) +
labs(x = "Correlation (absolute value)", y = "Variables") +
theme_minimal()
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_segment(aes(x = 0, xend = absr, yend = variable)) +
geom_point(aes(color = sign)) +
labs(x = "Correlation (absolute value)", y = "Variables") +
theme_bw()
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_segment(aes(x = 0, xend = absr, yend = variable)) +
geom_point(aes(color = sign)) +
labs(x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
theme_bw()
