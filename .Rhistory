x <- ryx(Boston, y="medv")
print <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
df$p <- signif(df$p, 3)
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
print(x)
summary <- function(x) {
medcorr <- round(median(x$df$r), 3)
mincorr <- round(min(x$df$r), 3)
maxcorr <- round(max(x$df$r), 3)
count_insig <- sum(x$df$sigif == " ")
n_x <- length(x$df$variable)
cat("Correlating", x$y, "with", paste0(x$x),
"\nThe median absolute correlation was", medcorr, "with a range from",
mincorr, "to", maxcorr, "\n", n_x - count_insig, "out of", n_x,
"variables were significant at the p < 0.05 level.")
}
summary(x)
plot <- function(x) {
require(ggplot2)
df <- x$df
df$sign <- ifelse(df$r >= 0, "positive", "negative")
df$absr <- abs(df$r)
df$variable <- factor(df$variable, levels = df$variable[order(df$absr)])
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable)) +
labs(x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
theme_bw()
}
plot(x)
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable), color = "gray") +
labs(x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
theme_bw()
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable), color = "gray") +
labs(x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
scale_color_manual(values = c("blue", "red"))
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable), color = "gray") +
labs(x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
scale_color_manual(values = c("blue", "red")) +
theme_bw()
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable), color = "gray") +
labs(x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
scale_color_manual(values = c("red", "blue")) +
theme_bw()
ryx <- function(data, y, x){
if(missing(x)){
x <- names(data)[sapply(data, class)=="numeric"]
x <- setdiff(x, y)
}
df <- data.frame()
for (var in x){
res <- cor.test(data[[y]], data[[var]])
df_temp <- data.frame(variable = var,
r = res$estimate,
p = res$p.value)
df <- rbind(df, df_temp)
df <- df[order(-abs(df$r)),]
}
df$sigif <- ifelse(df$p < .001, "***",
ifelse(df$p < .01, "**",
ifelse(df$p < .05, "*", " ")))
results <- list(y=y, x=x, df=df)
class(results) <- "ryx"
return(results)
}
x <- ryx(Boston, y="medv")
print <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
df$p <- signif(df$p, 3)
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
summary <- function(x) {
medcorr <- round(median(x$df$r), 3)
mincorr <- round(min(x$df$r), 3)
maxcorr <- round(max(x$df$r), 3)
count_insig <- sum(x$df$sigif == " ")
n_x <- length(x$df$variable)
cat("Correlating", x$y, "with", paste0(x$x),
"\nThe median absolute correlation was", medcorr, "with a range from",
mincorr, "to", maxcorr, "\n", n_x - count_insig, "out of", n_x,
"variables were significant at the p < 0.05 level.")
}
plot <- function(x) {
require(ggplot2)
df <- x$df
df$sign <- ifelse(df$r >= 0, "positive", "negative")
df$absr <- abs(df$r)
df$variable <- factor(df$variable, levels = df$variable[order(df$absr)])
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable), color = "gray") +
labs(x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
scale_color_manual(values = c("red", "blue")) +
theme_bw()
}
plot(x)
plot <- function(x) {
df <- x$df
df$sign <- ifelse(df$r >= 0, "positive", "negative")
df$absr <- abs(df$r)
df$variable <- factor(df$variable, levels = df$variable[order(df$absr)])
ggplot2::ggplot(df, aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable), color = "gray") +
labs(x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
scale_color_manual(values = c("red", "blue")) +
theme_bw()
}
plot(x)
build_site()
build_site()
library(pkgdown)
build_site()
?sign
x <- ryx(mtcars, y="mpg")
ryx <- function(data, y, x){
if(missing(x)){
x <- names(data)[sapply(data, class)=="numeric"]
x <- setdiff(x, y)
}
df <- data.frame()
for (var in x){
res <- cor.test(data[[y]], data[[var]])
df_temp <- data.frame(variable = var,
r = res$estimate,
p = res$p.value)
df <- rbind(df, df_temp)
df <- df[order(-abs(df$r)),]
}
df$sigif <- ifelse(df$p < .001, "***",
ifelse(df$p < .01, "**",
ifelse(df$p < .05, "*", " ")))
results <- list(y=y, x=x, df=df)
class(results) <- "ryx"
return(results)
}
x <- ryx(mtcars, y="mpg")
plot(x)
summary(x)
x <- ryx(mtcars, y="mpg")
plot(x)
summary(x)
summary <- function(x) {
medcorr <- round(median(x$df$r), 3)
mincorr <- round(min(x$df$r), 3)
maxcorr <- round(max(x$df$r), 3)
count_insig <- sum(x$df$sigif == " ")
n_x <- length(x$df$variable)
cat("Correlating", x$y, "with", paste0(x$x),
"\nThe median absolute correlation was", medcorr, "with a range from",
mincorr, "to", maxcorr, "\n", n_x - count_insig, "out of", n_x,
"variables were significant at the p < 0.05 level.")
}
plot <- function(x) {
df <- x$df
df$sign <- ifelse(df$r >= 0, "positive", "negative")
df$absr <- abs(df$r)
df$variable <- factor(df$variable, levels = df$variable[order(df$absr)])
ggplot2::ggplot(df, aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable), color = "gray") +
labs(x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
scale_color_manual(values = c("red", "blue")) +
theme_bw()
}
plot(x)
plot <- function(x) {
df <- x$df
df$sign <- ifelse(df$r >= 0, "positive", "negative")
df$absr <- abs(df$r)
df$variable <- factor(df$variable, levels = df$variable[order(df$absr)])
ggplot2::ggplot(df, ggplot2::aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable), color = "gray") +
labs(x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
scale_color_manual(values = c("red", "blue")) +
theme_bw()
}
plot(x)
plot <- function(x) {
require(ggplot2)
df <- x$df
df$sign <- ifelse(df$r >= 0, "positive", "negative")
df$absr <- abs(df$r)
df$variable <- factor(df$variable, levels = df$variable[order(df$absr)])
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable), color = "gray") +
labs(x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
scale_color_manual(values = c("red", "blue")) +
theme_bw()
}
plot(x)
summary(x)
plot(x)
usethis::use_package("ggplot2")
x <- ryx(mtcars, y = "mpg")
ryx <- function(data, y, x){
if(missing(x)){
x <- names(data)[sapply(data, class)=="numeric"]
x <- setdiff(x, y)
}
df <- data.frame()
for (var in x){
res <- cor.test(data[[y]], data[[var]])
df_temp <- data.frame(variable = var,
r = res$estimate,
p = res$p.value)
df <- rbind(df, df_temp)
df <- df[order(-abs(df$r)),]
}
df$sigif <- ifelse(df$p < .001, "***",
ifelse(df$p < .01, "**",
ifelse(df$p < .05, "*", " ")))
results <- list(y=y, x=x, df=df)
class(results) <- "ryx"
return(results)
}
library(MASS)
x <- ryx(mtcars, y="mpg")
print <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
df$p <- signif(df$p, 3)
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
summary <- function(x) {
medcorr <- round(median(x$df$r), 3)
mincorr <- round(min(x$df$r), 3)
maxcorr <- round(max(x$df$r), 3)
count_insig <- sum(x$df$sigif == " ")
n_x <- length(x$df$variable)
cat("Correlating", x$y, "with", paste0(x$x),
"\nThe median absolute correlation was", medcorr, "with a range from",
mincorr, "to", maxcorr, "\n", n_x - count_insig, "out of", n_x,
"variables were significant at the p < 0.05 level.")
}
plot <- function(x) {
require(ggplot2)
df <- x$df
df$sign <- ifelse(df$r >= 0, "positive", "negative")
df$absr <- abs(df$r)
df$variable <- factor(df$variable, levels = df$variable[order(df$absr)])
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable), color = "gray") +
labs(x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
scale_color_manual(values = c("red", "blue")) +
theme_bw()
}
x <- ryx(mtcars, y = "mpg")
print(x)
summary(x)
plot(x)
usethis::use_vignette("rxy")
usethis::use_readme_md()
library(pkgdown)
build_site()
usethis::use_mit_license("Edvin Tran Hoac")
usethis::build_site()
build_site()
pkgdown::build_site()
build_site()
pkgdown::build_site()
library(pkgdown)
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
usethis::use_readme_rmd()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
ryx <- function(data, y, x){
if(missing(x)){
x <- names(data)[sapply(data, class)=="numeric"]
x <- setdiff(x, y)
}
df <- data.frame()
for (var in x){
res <- cor.test(data[[y]], data[[var]])
df_temp <- data.frame(variable = var,
r = res$estimate,
p = res$p.value)
df <- rbind(df, df_temp)
df <- df[order(-abs(df$r)),]
}
df$sigif <- ifelse(df$p < .001, "***",
ifelse(df$p < .01, "**",
ifelse(df$p < .05, "*", " ")))
results <- list(y=y, x=x, df=df)
class(results) <- "ryx"
return(results)
}
print.ryx <- function(x) {
df <- x$df
df$r <- round(df$r, 3)
df$p <- signif(df$p, 3)
cat(paste0("Correlations of ", x$y, " with\n"))
base::print(df, row.names = FALSE)
}
summary.ryx <- function(x) {
medcorr <- round(median(x$df$r), 3)
mincorr <- round(min(x$df$r), 3)
maxcorr <- round(max(x$df$r), 3)
count_insig <- sum(x$df$sigif == " ")
n_x <- length(x$df$variable)
cat("Correlating", x$y, "with", paste0(x$x),
"\nThe median absolute correlation was", medcorr, "with a range from",
mincorr, "to", maxcorr, "\n", n_x - count_insig, "out of", n_x,
"variables were significant at the p < 0.05 level.")
}
plot.ryx <- function(x) {
require(ggplot2)
df <- x$df
df$sign <- ifelse(df$r >= 0, "positive", "negative")
df$absr <- abs(df$r)
df$variable <- factor(df$variable, levels = df$variable[order(df$absr)])
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable), color = "gray") +
labs(x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
scale_color_manual(values = c("red", "blue")) +
theme_bw()
}
x <- ryx(Boston, y = "medv")
library(MASS)
x <- ryx(Boston, y = "medv")
plot(x)
build_site()
library(pkgdown)
build_site()
library(ryx)
library(rxy)
build_site()
build_site()
oneway <- function(formula, data) {
suppressMessages(require(dplyr))
x <- as.character(formula[[3]])
y <- as.character(formula[[2]])
data_complete <- na.omit(data[c(x, y)])
data_complete[[x]] <- factor(data_complete[[x]])
fit <- lm(formula, data)
stats <- data_complete %>%
group_by(.data[[x]]) %>%
summarize(n = n(),
mean = mean(.data[[y]]),
sd = sd(.data[[y]]))
results <- list(anova = fit,
summarystats = stats,
data = data_complete,
x = x,
y = y)
class(results) <- "oneway"
return(results)
}
library(ggplot2)
data(mpg)
bob <- oneway(hwy ~ class, mpg)
oneway(hwy ~ class, mpg)
print.oneway <- function(x, ...) {
if(!inherits(x, "oneway")) stop("Must be class oneway")
cat("Summary Statistics\n")
print(x$summarystats, digits = 3)
cat("\nAnalysis of Variance \n--------------------\n")
print(anova(x$anova))
}
bob <- oneway(hwy ~ class, mpg)
print(bob)
build_site()
build_site()
build_site()
build_site()
build_site()
ryx <- function(data, y, x){
if(missing(x)){
x <- names(data)[sapply(data, class)=="numeric"]
x <- setdiff(x, y)
}
df <- data.frame()
for (var in x){
res <- cor.test(data[[y]], data[[var]])
df_temp <- data.frame(variable = var,
r = res$estimate,
p = res$p.value)
df <- rbind(df, df_temp)
df <- df[order(-abs(df$r)),]
}
df$sigif <- ifelse(df$p < .001, "***",
ifelse(df$p < .01, "**",
ifelse(df$p < .05, "*", " ")))
results <- list(y=y, x=x, df=df)
class(results) <- "ryx"
return(results)
}
x <- ryx(Boston, y = "medv")
library(MASS)
x <- ryx(Boston, y = "medv")
plot.ryx <- function(x) {
if(!inherits(x, "ryx")) stop("Must be class ryx")
suppressMessages(require(ggplot2))
df <- x$df
df$sign <- ifelse(df$r >= 0, "positive", "negative")
df$absr <- abs(df$r)
df$variable <- factor(df$variable, levels = df$variable[order(df$absr)])
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable), color = "gray") +
labs(title = paste0("Correlations with ", x$y), x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
scale_color_manual(values = c("red", "blue")) +
theme_bw() +
theme(panel.grid.major.y = element_blank(),
panel.grid.major.x = element_line(linetype = 2))
}
plot(x)
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable), color = "gray") +
labs(title = paste0("Correlations with ", x$y), x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
scale_color_manual(values = c("red", "blue")) +
theme_bw() +
theme(panel.grid.major.y = element_blank(),
panel.grid.major.x = element_line(linetype = 2),
panel.grid.minor.x = element_blank())
plot.ryx <- function(x) {
if(!inherits(x, "ryx")) stop("Must be class ryx")
suppressMessages(require(ggplot2))
df <- x$df
df$sign <- ifelse(df$r >= 0, "positive", "negative")
df$absr <- abs(df$r)
df$variable <- factor(df$variable, levels = df$variable[order(df$absr)])
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign)) +
geom_segment(aes(x = 0, xend = absr, yend = variable), color = "gray") +
labs(title = paste0("Correlations with ", x$y), x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
scale_color_manual(values = c("red", "blue")) +
theme_bw() +
theme(panel.grid.major.y = element_blank(),
panel.grid.major.x = element_line(linetype = 2),
panel.grid.minor.x = element_blank())
}
plot(x)
library(pkgdown)
build_site()
plot.ryx <- function(x) {
if(!inherits(x, "ryx")) stop("Must be class ryx")
suppressMessages(require(ggplot2))
df <- x$df
df$sign <- ifelse(df$r >= 0, "positive", "negative")
df$absr <- abs(df$r)
df$variable <- factor(df$variable, levels = df$variable[order(df$absr)])
ggplot(df, aes(x = absr, y = variable, absr)) +
geom_point(aes(color = sign), size = 2) +
geom_segment(aes(x = 0, xend = absr, yend = variable), color = "lightgray") +
labs(title = paste0("Correlations with ", x$y), x = "Correlation (absolute value)", y = "Variables") +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
scale_color_manual(values = c("red", "blue")) +
theme_bw() +
theme(panel.grid.major.y = element_blank(),
panel.grid.major.x = element_line(linetype = 2),
panel.grid.minor.x = element_blank())
}
plot(x)
build_site()
build_site()
library(pkgdown)
build_site()
library(pkgdown)
build_site()
build_site
build_site()
build_site()
?lm
View(lm)
